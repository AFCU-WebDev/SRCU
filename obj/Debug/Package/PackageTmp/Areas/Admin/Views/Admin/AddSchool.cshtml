@model SRCUBagTracking.Models.School
@{      
    ViewBag.Title = "Add New School";

    // Couriers name in DropDownList
    List<SelectListItem> Couriers = new List<SelectListItem>();
    Couriers.Add(new SelectListItem{Text = "No Courier", Value = "0" });
    Couriers.Add(new SelectListItem{Text = "Morningside Courier",Value = "1"});
    Couriers.Add(new SelectListItem{Text = "US Pack Logistics",Value = "2"});

    // Branches name in DropDownList
    List<SelectListItem> Branches = new List<SelectListItem>();
    Branches.Add(new SelectListItem { Value = "110620", Text = "Ashburn" });
    Branches.Add(new SelectListItem { Value = "110660", Text = "Burke/Fairfax Station" });
    Branches.Add(new SelectListItem { Value = "110420", Text = "Fairfax" });
    Branches.Add(new SelectListItem { Value = "110700", Text = "Gainesville" });
    Branches.Add(new SelectListItem { Value = "110690", Text = "Manassas" });
    Branches.Add(new SelectListItem { Value = "110440", Text = "Mount Vernon" });
    Branches.Add(new SelectListItem { Value = "110455", Text = "Springfield" });
    Branches.Add(new SelectListItem { Value = "110590", Text = "Stafford" });
    Branches.Add(new SelectListItem { Value = "110480", Text = "Sterling" });
    Branches.Add(new SelectListItem { Value = "110670", Text = "Sudley Manor" });
    Branches.Add(new SelectListItem { Value = "110680", Text = "Winchester Medical Center" });
    Branches.Add(new SelectListItem { Value = "110600", Text = "Woodbridge" });

    // School System in DropDownList
    List<SelectListItem> SchoolSystem = new List<SelectListItem>();    
    SchoolSystem.Add(new SelectListItem { Value = "Fairfax", Text = "Fairfax" });
    SchoolSystem.Add(new SelectListItem { Value = "Fauquier County", Text = "Fauquier County" });
    SchoolSystem.Add(new SelectListItem { Value = "Frederick", Text = "Frederick" });
    SchoolSystem.Add(new SelectListItem { Value = "Loudoun", Text = "Loudoun" });
    SchoolSystem.Add(new SelectListItem { Value = "Manassas City", Text = "Manassas City" });
    SchoolSystem.Add(new SelectListItem { Value = "Manassas Park", Text = "Manassas Park" });
    SchoolSystem.Add(new SelectListItem { Value = "Prince William", Text = "Prince William" });
    SchoolSystem.Add(new SelectListItem { Value = "Stafford", Text = "Stafford" });

    // School Type in DropDownList
    List<SelectListItem> SchoolType = new List<SelectListItem>();
    SchoolType.Add(new SelectListItem { Value = "High School", Text = "High School" });
    SchoolType.Add(new SelectListItem { Value = "Middle School", Text = "Middle School" });
    SchoolType.Add(new SelectListItem { Value = "Secondary School", Text = "Secondary School" });
    SchoolType.Add(new SelectListItem { Value = "Elementry School", Text = "Elementry School" });
      
    }    

@Html.Partial("_AdminNavigation")

<div class="container mt-5">
  
        <h2 class="page-header">Add New School</h2>   <hr />

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="row mt-5">

                <div class="col-md-3">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <!-- School System-->
                    <div class="form-group">
                        @Html.LabelFor(m => m.schoolSystem, htmlAttributes: new { @class = "control-label" })
                        <div>
                            @Html.DropDownListFor(model => model.schoolSystem, SchoolSystem, "----- Please Select -----", new { @class = "form-control list-box tri-state" })
                            @Html.ValidationMessageFor(model => model.schoolSystem, "", new { @class = "text-danger small bold" })
                        </div>
                    </div>

                    <!-- School Name-->
                    <div class="form-group">
                        @Html.LabelFor(model => model.schoolName, htmlAttributes: new { @class = "control-label" })
                        <div>
                            @Html.EditorFor(model => model.schoolName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.schoolName, "", new { @class = "text-danger small bold" })
                        </div>
                    </div>

                    <!-- School Type-->
                    <div class="form-group">
                        @Html.LabelFor(model => model.schoolType, htmlAttributes: new { @class = "control-label" })
                        <div>
                            @Html.DropDownListFor(model => model.schoolType, SchoolType, "----- Please Select -----", new { @class = "form-control list-box tri-state" })
                            @Html.ValidationMessageFor(model => model.schoolType, "", new { @class = "text-danger small bold" })
                        </div>
                    </div>


                </div>
                <!--end column 3-->


                <div class="col-md-3">
                    <!-- School Phone-->
                    <div class="form-group">
                        @Html.LabelFor(model => model.schoolPhone, htmlAttributes: new { @class = "control-label" })
                        <div>
                            @Html.EditorFor(model => model.schoolPhone, new { htmlAttributes = new { @class = "form-control", mask = "999-999-9999" } })
                            @Html.ValidationMessageFor(model => model.schoolPhone, "", new { @class = "text-danger small bold" })
                        </div>
                    </div>
                    <!-- School Address 1-->
                    <div class="form-group">
                        @Html.LabelFor(model => model.schoolAddress1, htmlAttributes: new { @class = "control-label" })
                        <div>
                            @Html.EditorFor(model => model.schoolAddress1, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.schoolAddress1, "", new { @class = "text-danger small bold" })
                        </div>
                    </div>

                    <!-- School Address 2-->
                    <div class="form-group">
                        @Html.LabelFor(model => model.schoolAddress2, htmlAttributes: new { @class = "control-label" })
                        <div>
                            @Html.EditorFor(model => model.schoolAddress2, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.schoolAddress2, "", new { @class = "text-danger small bold" })
                        </div>
                    </div>

                    <!-- School City-->
                    <div class="form-group">
                        @Html.LabelFor(model => model.city, htmlAttributes: new { @class = "control-label" })
                        <div>
                            @Html.EditorFor(model => model.city, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.city, "", new { @class = "text-danger small bold" })
                        </div>
                    </div>

                    <!-- School State -->
                    <div class="form-group">
                        @Html.LabelFor(model => model.state, htmlAttributes: new { @class = "control-label" })
                        <div>
                            @Html.EditorFor(model => model.state, new { htmlAttributes = new { @class = "form-control", @Value = "VA" } })
                            @Html.ValidationMessageFor(model => model.state, "", new { @class = "text-danger small bold" })
                        </div>
                    </div>

                    <!-- School Zipcode -->
                    <div class="form-group">
                        @Html.LabelFor(model => model.zip, htmlAttributes: new { @class = "control-label" })
                        <div>
                            @Html.EditorFor(model => model.zip, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.zip, "", new { @class = "text-danger small bold" })
                        </div>
                    </div>


                </div>
                <!--end column 3-->

                <div class="col-md-3">
                    <!-- Contact Name-->
                    <div class="form-group">
                        @Html.LabelFor(model => model.contactName, htmlAttributes: new { @class = "control-label" })
                        <div>
                            @Html.EditorFor(model => model.contactName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.contactName, "", new { @class = "text-danger small bold" })
                        </div>
                    </div>

                    <!-- Contact Phone-->
                    <div class="form-group">
                        @Html.LabelFor(model => model.contactPhone, htmlAttributes: new { @class = "control-label" })
                        <div>
                            @Html.EditorFor(model => model.contactPhone, new { htmlAttributes = new { @class = "form-control", mask = "999-999-9999" } })
                            @Html.ValidationMessageFor(model => model.contactPhone, "", new { @class = "text-danger small bold" })
                        </div>
                    </div>

                    <!-- Contact Email-->
                    <div class="form-group">
                        @Html.LabelFor(model => model.contactEmail, htmlAttributes: new { @class = "control-label" })
                        <div>
                            @Html.EditorFor(model => model.contactEmail, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.contactEmail, "", new { @class = "text-danger small bold" })
                        </div>
                    </div>
                    <!-- Contact2 Name-->
                    <div class="form-group">
                        @Html.LabelFor(model => model.contactName2, htmlAttributes: new { @class = "control-label" })
                        <div>
                            @Html.EditorFor(model => model.contactName2, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.contactName2, "", new { @class = "text-danger small bold" })
                        </div>
                    </div>

                    <!-- Contact2 phone-->
                    <div class="form-group">
                        @Html.LabelFor(model => model.contactPhone2, htmlAttributes: new { @class = "control-label" })
                        <div>
                            @Html.EditorFor(model => model.contactPhone2, new { htmlAttributes = new { @class = "form-control", mask = "999-999-9999" } })
                            @Html.ValidationMessageFor(model => model.contactPhone2, "", new { @class = "text-danger small bold" })
                        </div>
                    </div>

                    <!-- Contact2 Email-->
                    <div class="form-group">
                        @Html.LabelFor(model => model.contactEmail2, htmlAttributes: new { @class = "control-label" })
                        <div>
                            @Html.EditorFor(model => model.contactEmail2, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.contactEmail2, "", new { @class = "text-danger small bold" })
                        </div>
                    </div>
                </div>
                <!--end column 3-->
                <div class="col-md-3">

                    <!-- Location in building-->
                    <div class="form-group">
                        @Html.LabelFor(model => model.locationInBuilding, htmlAttributes: new { @class = "control-label" })
                        <div>
                            @Html.EditorFor(model => model.locationInBuilding, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.locationInBuilding, "", new { @class = "text-danger small bold" })
                        </div>
                    </div>

                    <!-- Courier Company -->
                    <div class="form-group">
                        @Html.Label("Courier Company", htmlAttributes: new { @class = "control-label" })
                        <div>
                            @Html.DropDownListFor(model => model.courier_ID, Couriers, new { @class = "form-control list-box tri-state" })
                            @Html.ValidationMessageFor(model => model.courier_ID, "", new { @class = "text-danger small bold" })
                        </div>
                    </div>

                    <!-- Active -->
                    <div class="form-group">
                        @Html.LabelFor(model => model.active, htmlAttributes: new { @class = "control-label" })
                        <div>
                            @Html.EditorFor(model => model.active, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.active, "", new { @class = "text-danger small bold" })
                        </div>
                    </div>

                    <!-- Branch Name -->
                    <div class="form-group">
                        @Html.Label("Branch Name", htmlAttributes: new { @class = "control-label" })
                        <div>
                            @Html.DropDownListFor(model => model.Branch_ID, Branches, "----- Please Select -----", new { @class = "form-control list-box tri-state" })
                            @Html.ValidationMessageFor(model => model.Branch_ID, "", new { @class = "text-danger small bold" })
                        </div>
                    </div>

                    <!-- Branch Mascot -->
                    <div class="form-group">
                        @Html.LabelFor(model => model.BranchMascot, htmlAttributes: new { @class = "control-label" })
                        <div>
                            @Html.EditorFor(model => model.BranchMascot, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>

                    <!-- School Hours -->
                    <div class="form-group">
                        @Html.LabelFor(model => model.hours, htmlAttributes: new { @class = "control-label" })
                        <div>
                            @Html.EditorFor(model => model.hours, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>



                </div>
                <!--end column 3-->

            </div>

            <div class="row mt-5 mr-4 justify-content-end">
                    <input type="submit" value="Add New School" class="btn CTA_btn" />
            </div>
       
    }

        @*<div>
                @Html.ActionLink("Back to List", "School", new { area = "Admin", Controller = "Admin" })
            </div>*@
     
</div>


 <!--end column 12-->
